
#spring.datasource.hikari.username=user01
#spring.datasource.hikari.password=user01
#spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:xe
## -- hikari.jdbc-url 속성명은 연결되지 않는다. 그래서 일반 url 사용
##spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@192.168.184.4:1521:xe
#spring.datasource.hikari.driver-class-name=oracle.jdbc.driver.OracleDriver

server.port=80

spring.datasource.hikari.username=user04
spring.datasource.hikari.password=user04
spring.datasource.url=jdbc:mariadb://127.0.0.1:3306/user04
# 													데이터베이스명
spring.datasource.hikari.driver-class-name=org.mariadb.jdbc.Driver

mybatis.mapper-locations=classpath:/database/**/*Mapper.xml
mybatis.config-location=classpath:/database/config/config.xml








########################    fileUpload       ###################


###1. form method="post", enctype="multipart/form-data"
###2. API는 내장되어있다. 따로 pom.xml에 추가하지 않는다
###3. mlultipartResolver 객체 만들어줘야한다  -- enctype이 멀티파트다 - 파일을 하나의 파일일 아니라 짤라서 보냄
								       ##-- 멀티파트는 짤라진 애들 하나로 합쳐주는것

##multipart 사용여부
spring.servlet.multipart.enabled = true

## 파일당 최대 크기 설정(option)
spring.servlet.multipart.max-file-size=10MB

##총 파일의 크기 설정
spring.servlet.multipart.max-request-size=300MB

##파일을 저장할 파일 시스템의 경로
##spring.servlet.multipart.location="/Users/sist/upload"
##회사에서 쓰는 단독서버고 무조건 여기 올라간다 하면 써도 되는데 서버 올라가고 하면
##폴더 위치 바뀔수도 있으니까 지금은 안쓴다~!~!



#서비스 클래스가 부모 인터페이스 없이 단독 사용할 때 error 발생
#error 방지 하기 위한
spring.aop.proxy-target-class=true




## message 폴더 하위의 message로 시작하는 모든 파일들 
spring.messages.basename=message/message
### encoding
spring.messages.encoding=UTF-8
### message가 없는 코드일 경우 예외 발생(아마도 기본)
### true : 예외 발생시키지 않고 코드 자체 출력
spring.messages.use-code-as-default-message=true
### 파일 변경(직접 파일에 들어가서 변경) 얼마만큼에 한번씩 감지 할것인가 초단위
spring.messages.cache-duration=60
 spring.main.allow-bean-definition-overriding=true
